version: "3"
networks:
  default:
  internal:
    # no internet access
    internal: true

services:
  mariadb:
    image: mariadb:10.0.20
    networks:
      - internal
    environment:
      - MYSQL_DATABASE=clopus_clop
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
    volumes:
      - ./docker/mariadb:/var/lib/mysql
      - ./dbs.sql:/docker-entrypoint-initdb.d/01-dbs.sql
      - "./clop/tables with data.sql:/docker-entrypoint-initdb.d/02-clop.sql"
      - "./clop/tables without data.sql:/docker-entrypoint-initdb.d/03-clop.sql"
      - "./elements/tables with data.sql:/docker-entrypoint-initdb.d/04-elements.sql"
      - "./elements/tables without data.sql:/docker-entrypoint-initdb.d/05-elements.sql"

    # NOTE: mariadb image 10.0.20 doesn't support initdb, so manually connect to the container and run the following:
    # mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD clopus_clop < ./docker-entrypoint-initdb.d/01-dbs.sql && mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD clopus_clop < ./docker-entrypoint-initdb.d/02-clop.sql && mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD clopus_clop < ./docker-entrypoint-initdb.d/03-clop.sql && mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD clopus_clop < ./docker-entrypoint-initdb.d/04-elements.sql && mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD clopus_clop < ./docker-entrypoint-initdb.d/05-elements.sql

  adminer:
    image: adminer:4.8.1-standalone
    networks:
      - default
      - internal
    expose:
      - 8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.service=adminer
      - traefik.http.routers.adminer.rule=Host(`adminer.$DOMAIN_NAME`)
      - traefik.http.routers.adminer.entrypoints=websecure
      - traefik.http.routers.adminer.tls=true
      - traefik.http.routers.adminer.tls.certresolver=$CERT_RESOLVER
      - traefik.http.services.adminer.loadbalancer.server.port=8080
      # Enable auth
      - traefik.http.routers.adminer.middlewares=internal-auth

  apache-php:
    image: php:5.4-apache
    networks:
      - internal
      - default
    volumes:
      - ./clop:/var/www/html:ro
    command: |
      bash -c "
      docker-php-ext-install mysqli &&
      docker-php-ext-enable mysqli &&
      exec apache2-foreground"
    environment:
      MYSQL_PASS: ${MYSQL_PASS}
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.apache.service=apache-php
      - traefik.http.routers.apache.rule=Host(`$DOMAIN_NAME`)
      - traefik.http.routers.apache.entrypoints=websecure
      - traefik.http.routers.apache.tls=true
      - traefik.http.routers.apache.tls.certresolver=$CERT_RESOLVER
      - traefik.http.services.apache-php.loadbalancer.server.port=80

  traefik:
    image: traefik:v2.9.8
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
      - default
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/log/access.log:/log/access.log
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAIN_NAME`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=$CERT_RESOLVER
      # Add internal auth middleware
      - traefik.http.middlewares.internal-auth.basicauth.users=$TRAEFIC_USERS
      # Enable auth
      - traefik.http.routers.traefik.middlewares=internal-auth
  

  #caddy:
  #  image: caddy:2-alpine
  #  networks:
  #    - internal
  #    - default
  #  volumes:
  #    - ./data/Caddyfile:/etc/caddy/Caddyfile
  #    - ./data/caddy:/data # certificates storage
  #  ports:
  #    - 80:80
  #    - 443:443
  #  environment:
  #    DOMAIN_URL: ${DOMAIN_URL}

  #socat:
  #  image: alpine/socat
  #  networks:
  #    - default
  #    - internal
  #  ports:
  #    - 0.0.0.0:443:8081
  #    - 0.0.0.0:80:8081
  #  command: tcp-listen:8081,fork,reuseaddr tcp-connect:apache-php:80